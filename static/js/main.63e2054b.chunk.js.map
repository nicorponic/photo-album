{"version":3,"sources":["reducers/index.js","reducers/albums.js","store.js","containers/AlbumsList.js","actions/addAlbum.js","containers/AlbumsListContainer.js","App.js","serviceWorker.js","index.js"],"names":["combineReducers","albums","state","arguments","length","undefined","action","type","concat","Object","toConsumableArray","payload","enhancer","window","__REDUX_DEVTOOLS_EXTENSION__","store","createStore","reducer","AlbumsList","props","react","map","album","className","key","id","title","ADD_ALBUM","AlbumsListContainer","_this2","this","request","then","response","body","addAlbum","React","connect","App","react_default","a","createElement","es","containers_AlbumsListContainer","Component","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"4RAGeA,cAAgB,CAC7BC,OCJa,WAAwB,IAAvBC,EAAuBC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAf,GAAIG,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAErC,OAAQC,EAAOC,MACX,IAAK,YACD,SAAAC,OAAAC,OAAAC,EAAA,EAAAD,CAAWP,GAAX,CAAiBI,EAAOK,UAE5B,QACI,OAAOT,MCJXU,EACJC,OAAOC,8BAAgCD,OAAOC,+BAIjCC,EAFDC,YAAYC,EAASL,WCJpB,SAASM,EAAWC,GACjC,OACEC,EAAA,yBACEA,EAAA,sCADF,aAEaD,EAAMlB,OAAOG,OAF1B,qBAGEgB,EAAA,wBACGD,EAAMlB,OAAOoB,IAAI,SAAAC,GAAK,OACrBF,EAAA,oBAAIG,UAAU,QAAQC,IAAKF,EAAMG,IAC/BL,EAAA,mBAAGG,UAAU,QAAQD,EAAMI,YCVhC,IAAMC,EAAY,gBCMnBC,6MACJ1B,MAAQ,sFAEY,IAAA2B,EAAAC,KAClBC,EAAQ,+CAA+CC,KACrD,SAAAC,GAEIA,EAASC,KAAKb,IAAI,SAAAC,GAAK,OAAIO,EAAKV,MAAMgB,SAASb,EAAMG,GAAIH,EAAMI,WAGrEI,KAAKX,MAAMgB,SAAS,EAAG,oDAIvB,OAAKL,KAAKX,MAAMlB,OACTmB,EAAA,cAACF,EAAD,CAAYjB,OAAQ6B,KAAKX,MAAMlB,SADP,oBAdDmC,aAyBnBC,cANS,SAACnC,GACrB,MAAO,CACHD,OAAQC,EAAMD,SAImB,CAAEkC,SD7BpC,SAAkBV,EAAIC,GAC3B,MAAO,CACLnB,KAAMoB,EACNhB,QAAS,CACPc,KACAC,YCwBSW,CAAyCT,GCXzCU,mLAVX,OACEC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAU3B,MAAOA,GACfwB,EAAAC,EAAAC,cAAA,OAAKlB,UAAU,OACbgB,EAAAC,EAAAC,cAACE,EAAD,eALQC,aCIEC,QACW,cAA7BhC,OAAOiC,SAASC,UAEe,UAA7BlC,OAAOiC,SAASC,UAEhBlC,OAAOiC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOX,EAAAC,EAAAC,cAACU,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMxB,KAAK,SAAAyB,GACjCA,EAAaC","file":"static/js/main.63e2054b.chunk.js","sourcesContent":["import { combineReducers } from \"redux\";\nimport albums from \"./albums\";\n\nexport default combineReducers({\n  albums\n});\n","export default (state = [], action) => {\n  // console.log(state, 'state', action.payload, 'action')\n  switch (action.type) {\n      case 'ADD_ALBUM':\n          return [...state,action.payload]\n  \n      default:\n          return state\n  }\n}","import { createStore } from \"redux\";\nimport reducer from \"./reducers\";\n\nconst enhancer =\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\n\nconst store = createStore(reducer, enhancer);\n\nexport default store;\n","import * as React from \"react\";\n\nexport default function AlbumsList(props) {\n  return (\n    <div>\n      <h1>All Albums</h1>\n      There are {props.albums.length} albums available.\n      <ul>\n        {props.albums.map(album => (\n          <li className=\"album\" key={album.id}>\n            <p className=\"name\">{album.title}</p>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n","export const ADD_ALBUM = \"ADD_ALBUM\";\n\nexport function addAlbum(id, title) {\n  return {\n    type: ADD_ALBUM,\n    payload: {\n      id,\n      title\n    }\n  };\n}\n","import * as React from \"react\";\nimport * as request from \"superagent\";\nimport AlbumsList from \"./AlbumsList\";\nimport { connect } from \"react-redux\";\nimport { addAlbum } from \"../actions/addAlbum\";\n\nclass AlbumsListContainer extends React.Component {\n  state = {};\n\n  componentDidMount() {\n    request(\"https://jsonplaceholder.typicode.com/albums\").then(\n      response => {\n          //console.log(response.body)\n          response.body.map(album => this.props.addAlbum(album.id, album.title))\n    })\n    \n    this.props.addAlbum(1, \"Seriously Alice\")\n  }\n\n  render() {\n    if (!this.props.albums) return \"Loading...\";\n    return <AlbumsList albums={this.props.albums} />;\n  }\n}\n\nconst mapStateToProps = (state)=>{\n    return {\n        albums: state.albums\n    }\n}\n\nexport default connect( mapStateToProps, { addAlbum } )(AlbumsListContainer);\n","import React, { Component } from \"react\";\n//import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport AlbumsListContainer from \"./containers/AlbumsListContainer\";\n\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <div className=\"App\">\n          <AlbumsListContainer />\n        </div>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}